services:
  postgres:
    image: postgres:15
    container_name: agilepath_db
    environment:
      - POSTGRES_USER=${JDBC_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${JDBC_DATABASE_PASSWORD}
      - POSTGRES_DB=agilepath
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    command: ${REDIS_COMMAND}
    ports:
      - "6379:6379"

  backend:
    environment:
      - JDBC_DATABASE_URL=${JDBC_DATABASE_URL}
      - JDBC_DATABASE_USERNAME=${JDBC_DATABASE_USERNAME}
      - JDBC_DATABASE_PASSWORD=${JDBC_DATABASE_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - CORS_ENABLED=${CORS_ENABLED}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS}
      - CLERK_ISSUER=${CLERK_ISSUER}
      - SERVER_PORT=${SERVER_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - LOG_LEVEL=${LOG_LEVEL}
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: agilepath_backend
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    profiles:
      - dev
      - ci
      - prod
    volumes:
      - backend-gradle-cache:/home/gradle/.gradle

  frontend:
    container_name: agilepath_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    stdin_open: true
    tty: true
    command: npm run dev -- --host
    environment:
      - PROFILE=dev
      - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY}
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json
    profiles:
      - dev

  frontend_static:
    container_name: agilepath_frontend_static
    build:
      context: ./frontend
      dockerfile: Dockerfile.nginx
      args:
        VITE_CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
        VITE_BACKEND_URL: ${VITE_BACKEND_URL}

    ports:
      - "80:80"
    profiles:
      - ci
      - prod

volumes:
  postgres_data:
  backend-gradle-cache:
  frontend-node-modules:
