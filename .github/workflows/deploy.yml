name: deploy

on:
  push:
    branches:
      - main
      - 4-docker

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Azure VM
        run: |

          # SSH into the Azure VM and deploy
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} << EOF
            cd /home/azureuser/agilepath || exit

            # Pull the latest changes from the main branch
            echo "Pulling latest changes from main branch..."
            git fetch origin main
            git pull origin main
            git switch main

            # Set environment variables directly in OS (no need for .env)
            export JDBC_DATABASE_URL="${{ secrets.JDBC_DATABASE_URL }}"
            export JDBC_DATABASE_USERNAME="${{ secrets.JDBC_DATABASE_USERNAME }}"
            export JDBC_DATABASE_PASSWORD="${{ secrets.JDBC_DATABASE_PASSWORD }}"
            export REDIS_HOST="${{ secrets.REDIS_HOST }}"
            export REDIS_PORT="${{ secrets.REDIS_PORT }}"
            export CORS_ENABLED="${{ secrets.CORS_ENABLED }}"
            export CORS_ALLOWED_ORIGINS="${{ secrets.CORS_ALLOWED_ORIGINS }}"
            export CORS_ALLOWED_METHODS="${{ secrets.CORS_ALLOWED_METHODS }}"
            export CORS_ALLOWED_HEADERS="${{ secrets.CORS_ALLOWED_HEADERS }}"
            export CORS_ALLOW_CREDENTIALS="${{ secrets.CORS_ALLOW_CREDENTIALS }}"
            export CLERK_ISSUER="${{ secrets.CLERK_ISSUER }}"
            export SERVER_PORT="${{ secrets.SERVER_PORT }}"
            export VITE_BACKEND_URL="${{ secrets.VITE_BACKEND_URL }}"
            export VITE_CLERK_PUBLISHABLE_KEY="${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}"
            export SPRING_PROFILES_ACTIVE="prod"
            export LOG_LEVEL="INFO"

            # Start Docker services for production
            echo "Starting Docker services for production..."
            docker compose --profile prod down
            docker compose --profile prod up --build -d
          EOF

      - name: clean up unused images
        run: |
          docker image prune -f
